{"version":3,"sources":["logo.svg","components/trainingpage.js","components/titlepage.js","components/timepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Trainingpage","props","useState","data","setdata","useEffect","fetch","method","headers","body","JSON","stringify","query","then","res","json","training","monthname","style","backgroundColor","paddingRight","paddingTop","display","width","onClick","setTraining","marginRight","float","class","console","log","map","k","date","split","className","border","borderRadius","paddingBottom","marginLeft","marginTop","position","height","top","left","bottom","margin","right","fontSize","fontWeight","textAlign","parseInt","title","color","startTime","endTime","Titlepage","day","setday","month","setmonth","year","setyear","paddingLeft","setTitle","dateupdate","setDate","dateUpdate","onChange","e","settitle","target","value","padding","placeholder","marginBottom","type","Timepage","hr","sethr","min","setmin","ap","setap","hrs","sethrs","mins","setmins","aps","setaps","options","key","text","sanity","starttimeupdate","starttimeUpdate","endtimeupdate","endtimeUpdate","Dropdown","fluid","selection","App","trainingpage","settrainingpage","titlepage","settitlepage","timepage","settimepage","setdate","setstartTime","setendTime","inserttraining","setTimeout","window","location","reload","setTime","time","insertTraining","startt1","endt1","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"mJAAAA,EAAOC,QAAU,IAA0B,kC,+GC2D5BC,G,YAzDY,SAACC,GAAW,IAAD,EACVC,mBAAS,IADC,mBAC3BC,EAD2B,KACrBC,EADqB,KAElCC,qBAAU,WACNC,MAAM,mDAAmD,CACrDC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACC,MAAM,iOAY5BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAASF,MAAK,SAACC,GAClCV,EAAQU,EAAIX,KAAKa,eAGlB,IACH,IAAMC,EAAY,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAErF,OACI,6BACG,yBAAKC,MAAO,CAACC,gBAAgB,WAA7B,IAAyC,wBAAID,MAAO,CAACE,aAAa,QAAzB,cACzC,yBAAKF,MAAO,CAACG,WAAW,OAAOC,QAAQ,QAAQC,MAAM,SAAS,4BAAQC,QAAS,WAAKvB,EAAMwB,eAAgBP,MAAO,CAACQ,YAAY,KAAKC,MAAM,SAAUC,MAAM,qBAA3F,mBAA9D,MACA,6BACK,6BACCC,QAAQC,IAAI3B,GAEhBA,GAAMA,EAAK4B,KAAI,SAACf,GACda,QAAQC,IAAId,GACZ,IAAIgB,EAAIhB,EAASiB,KAAKC,MAAM,KAE5B,OADAL,QAAQC,IAAIE,GAEX,yBAAKG,UAAU,qBAAqBjB,MAAO,CAAEK,MAAM,MAAMa,OAAO,kBAAkBC,aAAa,OAAOC,cAAc,OAAOC,WAAW,KAAKb,YAAY,KAAKc,UAAU,SACzK,yBAAKtB,MAAO,CAACK,MAAM,QAAQG,YAAY,MAAMU,OAAO,kBAAkBK,SAAS,WAAWtB,gBAAgB,SAASuB,OAAO,OAAOC,IAAI,OAAOC,KAAK,OAAOC,OAAO,SAC/J,yBAAK3B,MAAO,CAACuB,SAAS,WAAWK,OAAO,sBAAsBJ,OAAO,MAAMC,IAAI,MAAMC,KAAK,MAAMG,MAAM,MAAMC,SAAS,OAAOC,WAAW,OAAOC,UAAU,WAAYlB,EAAE,GAAtK,IAA2Kf,EAAUkC,SAASnB,EAAE,IAAI,KAEpM,yBAAKd,MAAO,CAACK,MAAM,QAAQ,yBAAKL,MAAO,CAACsB,UAAU,OAAOU,UAAU,SAEnE,uBAAGhC,MAAO,CAAC+B,WAAW,OAAOD,SAAS,WAAYhC,EAASoC,OAC3D,yBAAKlC,MAAO,CAAC8B,SAAS,SAASK,MAAM,SAAS,8BAAOrC,EAASsC,UAAhB,OAA+BtC,EAASuC,SACtF,0BAAMrC,MAAO,CAACqB,WAAW,SAAzB,6BCNEiB,EAxCQ,SAACvD,GAAW,IAAD,EACJC,mBAAS,IADL,mBACnBuD,EADmB,KACdC,EADc,OAEAxD,mBAAS,IAFT,mBAEnByD,EAFmB,KAEZC,EAFY,OAGF1D,mBAAS,IAHP,mBAGnB2D,EAHmB,KAGbC,EAHa,KAY1B,OARAjC,QAAQC,IAAI2B,GACZ5B,QAAQC,IAAI6B,GACZ9B,QAAQC,IAAI+B,GAOZ,6BACE,yBAAK3C,MAAO,CAACC,gBAAgB,WAAW,wBAAID,MAAO,CAACgC,UAAU,OAAOX,WAAW,SAAxC,yBAC1C,yBAAKrB,MAAO,CAACG,WAAW,OAAO0C,YAAY,QAAQ,4BAAQvC,QAAS,WAAKvB,EAAM+D,WAR/E,WACE,IAAIC,EAAYJ,EAAK,IAAIF,EAAM,IAAIF,EACnC5B,QAAQC,IAAImC,GACZhE,EAAMiE,QAAQD,GAK2EE,IAAevC,MAAM,qBAA7D,SACnD,0BAAMA,MAAM,WAAU,yBAAKA,MAAM,SAAQ,2BAAOV,MAAO,CAACQ,YAAY,MAAMa,WAAW,OAAOS,SAAS,SAA5D,SACzC,2BAAOoB,SAAU,SAACC,GAAKpE,EAAMqE,SAASD,EAAEE,OAAOC,QAAStD,MAAO,CAACuD,QAAQ,OAAOlD,MAAM,OAAQmD,YAAY,WAEzG,yBAAKxD,MAAO,CAACQ,YAAY,MAAMa,WAAW,OAAOS,SAAS,OAAO2B,aAAa,OAAO1B,WAAW,SAAhG,QACA,yBAAK/B,MAAO,CAACqB,WAAW,KAAKb,YAAY,MAAOS,UAAU,wBAC1D,yBAAKjB,MAAO,CAACI,QAAQ,eAAe4B,UAAU,QAAStB,MAAM,gBAAe,sCAGvE,2BAAOwC,SAAU,SAACC,GAAMX,EAAOW,EAAEE,OAAOC,QAASI,KAAK,OAAOF,YAAY,QAEzE,yBAAKxD,MAAO,CAACI,QAAQ,eAAe4B,UAAU,QAAStB,MAAM,gBAAe,wCAE5E,2BAAOwC,SAAU,SAACC,GAAMT,EAASS,EAAEE,OAAOC,QAASI,KAAK,OAAOF,YAAY,QAC3E,yBAAKxD,MAAO,CAACI,QAAQ,eAAe4B,UAAU,QAAStB,MAAM,gBAAe,uCAE5E,2BAAOwC,SAAU,SAACC,GAAMP,EAAQO,EAAEE,OAAOC,QAASI,KAAK,OAAOF,YAAY,c,QC2DxEG,EA1FO,SAAC5E,GAAW,IAAD,EACTC,mBAAS,IADA,mBACtB4E,EADsB,KAClBC,EADkB,OAEP7E,mBAAS,IAFF,mBAEtB8E,EAFsB,KAEjBC,EAFiB,OAGT/E,mBAAS,IAHA,mBAGtBgF,EAHsB,KAGlBC,EAHkB,OAIPjF,mBAAS,IAJF,mBAItBkF,EAJsB,KAIjBC,EAJiB,OAKLnF,mBAAS,IALJ,mBAKtBoF,EALsB,KAKhBC,EALgB,OAMPrF,mBAAS,IANF,mBAMtBsF,EANsB,KAMjBC,EANiB,KAOvBC,EAAU,CACd,CAAEC,IAAK,QAASC,KAAM,QAASpB,MAAO,IACtC,CAAEmB,IAAK,KAAMC,KAAM,KAAMpB,MAAO,MAChC,CAAEmB,IAAK,KAAMC,KAAM,KAAMpB,MAAO,OA0B9B,SAASqB,KAhBT,WAEE,GAAGf,GAAIE,GAAKE,EAAG,CACb,IAAIY,EAAiBhB,EAAG,IAAIE,EAAOE,EACnCjF,EAAMqD,UAAUwC,IAclBC,GATF,WACE,GAAGX,GAAKE,GAAME,EAAI,CAChB,IAAIQ,EAAeZ,EAAI,IAAIE,EAAQE,EACnCvF,EAAMsD,QAAQyC,IAOhBC,GAIF,OA7BApE,QAAQC,IAAIgD,GACZjD,QAAQC,IAAIkD,GACZnD,QAAQC,IAAIoD,GACZrD,QAAQC,IAAIsD,GACZvD,QAAQC,IAAIwD,GACZzD,QAAQC,IAAI0D,GAyBZ,6BACE,yBAAKtE,MAAO,CAACC,gBAAgB,WAAW,wBAAID,MAAO,CAACgC,UAAU,OAAOX,WAAW,SAAxC,yBAC1C,yBAAKrB,MAAO,CAACG,WAAW,OAAO0C,YAAY,QAAQ,4BAAQvC,QAAS,WAAOqE,KAAYjE,MAAM,qBAA1C,WAGnD,yBAAKV,MAAO,CAACS,MAAM,OAAOY,WAAW,KAAKS,SAAS,OAAO2B,aAAa,OAAO1B,WAAW,SAAzF,cACA,0BAAMrB,MAAM,WACZ,yBAAKV,MAAO,CAACqB,WAAW,KAAKb,YAAY,KAAKH,MAAM,OAAQY,UAAU,wBACtE,yBAAKjB,MAAO,CAACI,QAAQ,eAAe4B,UAAU,QAAStB,MAAM,gBAAe,qCAGvE,2BAAOwC,SAAU,SAACC,GAAKU,EAAMV,EAAEE,OAAOC,QAASI,KAAK,OAAOF,YAAY,QAEvE,yBAAKxD,MAAO,CAACI,QAAQ,eAAe4B,UAAU,QAAStB,MAAM,gBAAe,sCAE5E,2BAAOwC,SAAU,SAACC,GAAMY,EAAOZ,EAAEE,OAAOC,QAAUI,KAAK,OAAOF,YAAY,SAC1E,yBAAKxD,MAAO,CAACI,QAAQ,eAAe4B,UAAU,QAAStB,MAAM,gBAAe,wCAE5E,kBAACsE,EAAA,EAAD,CAAU9B,SAAU,SAACC,EAAElE,GAAQgF,EAAMhF,EAAKqE,QAAUE,YAAY,QAAQyB,OAAK,EAACC,WAAS,EAACV,QAASA,OAIjG,0BAAM9D,MAAM,WAEjB,yBAAKV,MAAO,CAACS,MAAM,OAAOY,WAAW,KAAKS,SAAS,OAAO2B,aAAa,OAAO1B,WAAW,SAAzF,YACA,yBAAK/B,MAAO,CAACqB,WAAW,KAAKb,YAAY,KAAKH,MAAM,OAAQY,UAAU,wBACtE,yBAAKjB,MAAO,CAACI,QAAQ,eAAe4B,UAAU,QAAStB,MAAM,gBAAe,qCAGvE,2BAAOwC,SAAU,SAACC,GAAMgB,EAAOhB,EAAEE,OAAOC,QAASI,KAAK,OAAOF,YAAY,QAEzE,yBAAKxD,MAAO,CAACI,QAAQ,eAAe4B,UAAU,QAAStB,MAAM,gBAAe,sCAE5E,2BAAOwC,SAAU,SAACC,GAAMkB,EAAQlB,EAAEE,OAAOC,QAASI,KAAK,OAAOF,YAAY,SAC1E,yBAAKxD,MAAO,CAACI,QAAQ,eAAe4B,UAAU,QAAStB,MAAM,gBAAe,wCAC5E,kBAACsE,EAAA,EAAD,CAAU9B,SAAU,SAACC,EAAElE,GAAQsF,EAAOtF,EAAKqE,QAAUE,YAAY,QAAQyB,OAAK,EAACC,WAAS,EAACV,QAASA,SCjBhGW,MAxDf,WAAgB,IAAD,EAC6BnG,oBAAS,GADtC,mBACJoG,EADI,KACUC,EADV,OAEwBrG,oBAAS,GAFjC,mBAEHsG,EAFG,KAEQC,EAFR,OAGqBvG,oBAAS,GAH9B,mBAGJwG,EAHI,KAGMC,EAHN,OAIezG,mBAAS,IAJxB,mBAIJkD,EAJI,KAIGkB,EAJH,OAKapE,mBAAS,IALtB,mBAKJ+B,EALI,KAKE2E,EALF,OAMuB1G,mBAAS,IANhC,mBAMJoD,EANI,KAMOuD,EANP,OAOmB3G,mBAAS,IAP5B,mBAOJqD,EAPI,KAOKuD,EAPL,KAeX,SAASC,IACJzD,GAAWC,GACdjD,MAAM,mDAAmD,CACnDC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACC,MAAM,6DAAD,OACWqB,EADX,wBAC+BsB,EAD/B,0BACwDD,EADxD,sBAC+EF,EAD/E,yQAc3BvC,MAAK,SAACC,GACPkG,YAAW,WACTC,OAAOC,SAASC,QAAO,KACtB,QAGX,OAhCEtF,QAAQC,IAAIsB,GACZvB,QAAQC,IAAIG,GACZJ,QAAQC,IAAIwB,GACZzB,QAAQC,IAAIyB,GACZlD,qBAAU,WACR0G,MACC,CAACzD,EAAUC,IA2Bd,yBAAKpB,UAAU,OAEbmE,GAAe,kBAAC,EAAD,CAAc7E,YAAa,WAAK8E,GAAgB,GAAOE,GAAa,MAGnFD,GAAY,kBAAC,EAAD,CAAWxC,SAAU,WAAKyC,GAAa,GAAOE,GAAY,IAAQrC,SAAU,SAACnE,GAAQmE,EAASnE,IAAQ+D,QAAS,SAAC/D,GAAQyG,EAAQzG,MAG3IuG,GAAW,kBAAC,EAAD,CAAUU,QAAS,WAAKT,GAAY,GAAOJ,GAAgB,IAAQjD,UAAW,SAAC+D,GAAQR,EAAaQ,IAAQ9D,QAAS,SAAC8D,GAAQP,EAAWO,IAAQC,eAAgB,WAAKP,KAAmBQ,QAASjE,EAAWkE,MAAOjE,MC7ClNkE,QACW,cAA7BR,OAAOC,SAASQ,UAEe,UAA7BT,OAAOC,SAASQ,UAEhBT,OAAOC,SAASQ,SAASC,MACvB,2D,MCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtH,MAAK,SAAAuH,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1G,QAAQ0G,MAAMA,EAAMC,c","file":"static/js/main.d7eebd81.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{useEffect, useState} from 'react';\r\n\r\nexport const Trainingpage =(props) => {\r\n    const [data, setdata] = useState([]);\r\n    useEffect(() => {\r\n        fetch('https://natural-rattler-14.hasura.app/v1/graphql',{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({query:`query{\r\n                training\r\n                {\r\n                  id\r\n                  title\r\n                  date\r\n                  startTime\r\n                  endTime\r\n                }\r\n    \r\n            }`})\r\n    \r\n        }).then(res => res.json()) .then((res) => { \r\n        setdata(res.data.training);\r\n    });\r\n        \r\n    }, []);\r\n    const monthname = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"] \r\n    \r\n    return (\r\n        <div>\r\n           <div style={{backgroundColor:\"orange\"}}> <h1 style={{paddingRight:\"90%\"}}>Schedules</h1></div>\r\n           <div style={{paddingTop:\"30px\",display:\"block\",width:\"100%\"}}><button onClick={()=>{props.setTraining()}} style={{marginRight:\"5%\",float:\"right\"}} class=\"ui primary button\">Create Schedule</button>  </div>\r\n           <br>\r\n           </br><br>\r\n           </br>{console.log(data)}\r\n           \r\n           { data&&data.map((training)=>{\r\n               console.log(training);\r\n               var k = training.date.split(\"-\")\r\n               console.log(k);\r\n               return(\r\n                <div className=\"ui two column grid\" style={{ width:\"90%\",border:\"1px solid black\",borderRadius:\"10px\",paddingBottom:\"20px\",marginLeft:\"5%\",marginRight:\"5%\",marginTop:\"20px\"}}>\r\n             <div style={{width:\"100px\",marginRight:\"5px\",border:\"1px solid black\",position:\"relative\",backgroundColor:\"orange\",height:\"80px\",top:\"10px\",left:\"10px\",bottom:\"10px\"}}>\r\n             <div style={{position:\"absolute\",margin:\"25px 22px 25px 25px\",height:\"2px\",top:\"2px\",left:\"2px\",right:\"2px\",fontSize:\"1rem\",fontWeight:\"bold\",textAlign:\"center\"}}>{k[2]} {monthname[parseInt(k[1])-1]}</div>\r\n             </div>\r\n             <div style={{width:\"65%\"}}><div style={{marginTop:\"20px\",textAlign:\"left\"}}>\r\n             \r\n             <p style={{fontWeight:\"bold\",fontSize:\"1.2rem\"}}>{training.title}</p>\r\n             <div style={{fontSize:\"0.7rem\",color:\"grey\"}}><span>{training.startTime} to {training.endTime}</span>\r\n             <span style={{marginLeft:\"20px\"}}>20 participants</span>\r\n             </div>\r\n             </div></div>  \r\n  \r\n           </div>\r\n               )\r\n           }) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Trainingpage\r\n\r\n","import React,{useState} from 'react'\r\nimport { Container } from 'semantic-ui-react'\r\nexport const Titlepage=(props) => {\r\n        const [day, setday] = useState(\"\");\r\n        const [month, setmonth] = useState(\"\");\r\n        const [year, setyear] = useState(\"\");\r\n        console.log(day);\r\n        console.log(month);\r\n        console.log(year);\r\n        function dateUpdate(){\r\n          var dateupdate= year+\"-\"+month+\"-\"+day;\r\n          console.log(dateupdate);\r\n          props.setDate(dateupdate);\r\n        }\r\n        return(\r\n        <div>\r\n          <div style={{backgroundColor:\"orange\"}}><h1 style={{textAlign:\"left\",marginLeft:\"10px\"}}>New Schedule - Step1</h1></div>  \r\n        <div style={{paddingTop:\"30px\",paddingLeft:\"65%\"}}><button onClick={()=>{props.setTitle(); dateUpdate()}} class=\"ui primary button\">Next</button></div>\r\n        <form class=\"ui form\"><div class=\"field\"><label style={{marginRight:\"85%\",marginLeft:\"30px\",fontSize:\"18px\"}}>Title</label>\r\n        <input onChange={(e)=>{props.settitle(e.target.value)}} style={{padding:\"10px\",width:\"85%\"}} placeholder=\"Title\" /></div>\r\n        \r\n        <div style={{marginRight:\"85%\",marginLeft:\"30px\",fontSize:\"18px\",marginBottom:\"10px\",fontWeight:\"bold\"}}>Date</div>\r\n        <div style={{marginLeft:\"5%\",marginRight:\"5%\"}} className=\"ui three column grid\">\r\n        <div style={{display:\"inline-block\",textAlign:\"left\"}} class=\"field column\"><label>Day</label>\r\n            \r\n            \r\n             <input onChange={(e)=>{ setday(e.target.value)}} type=\"text\" placeholder=\"DD\"/></div>\r\n\r\n             <div style={{display:\"inline-block\",textAlign:\"left\"}} class=\"field column\"><label>Month</label>\r\n        \r\n             <input onChange={(e)=>{ setmonth(e.target.value)}} type=\"text\" placeholder=\"MM\"/></div>\r\n             <div style={{display:\"inline-block\",textAlign:\"left\"}} class=\"field column\"><label>Year</label>\r\n            \r\n             <input onChange={(e)=>{ setyear(e.target.value)}} type=\"text\" placeholder=\"YYYY\" /></div>\r\n             </div>\r\n             </form>\r\n             \r\n             </div>\r\n             \r\n    )\r\n}\r\n\r\nexport default Titlepage\r\n","import React,{useState} from 'react'\r\nimport { Dropdown } from 'semantic-ui-react'\r\nexport const Timepage=(props) => {\r\n    const [hr, sethr] = useState(\"\");\r\n    const [min, setmin] = useState(\"\");\r\n    const [ap, setap] = useState(\"\");\r\n    const [hrs, sethrs] = useState(\"\");\r\n    const [mins, setmins] = useState(\"\");\r\n    const [aps, setaps] = useState(\"\");\r\n    const options = [\r\n      { key: 'AM/PM', text: 'AM/PM', value: '' },\r\n      { key: 'AM', text: 'AM', value: 'AM' },\r\n      { key: 'PM', text: 'PM', value: 'PM' }\r\n\r\n      \r\n    ]\r\n        console.log(hr);\r\n        console.log(min);\r\n        console.log(ap);\r\n        console.log(hrs);\r\n        console.log(mins);\r\n        console.log(aps);\r\n        function starttimeUpdate(){\r\n        \r\n          if(hr&&min&&ap){\r\n            var starttimeupdate= hr+\":\"+min+\"\"+ap;\r\n            props.startTime(starttimeupdate);\r\n    \r\n          }\r\n  \r\n        }\r\n        function endtimeUpdate(){\r\n          if(hrs&&mins&&aps){\r\n            var endtimeupdate= hrs+\":\"+mins+\"\"+aps;\r\n            props.endTime(endtimeupdate);\r\n          }\r\n         \r\n        }\r\n        function sanity(){\r\n          let count=0;\r\n          starttimeUpdate();\r\n          endtimeUpdate();\r\n          \r\n        \r\n        }\r\n        return(\r\n        <div>\r\n          <div style={{backgroundColor:\"orange\"}}><h1 style={{textAlign:\"left\",marginLeft:\"10px\"}}>New Schedule - Step2</h1></div>  \r\n        <div style={{paddingTop:\"30px\",paddingLeft:\"65%\"}}><button onClick={()=>{  sanity() }} class=\"ui primary button\">Create</button></div>\r\n        \r\n        \r\n        <div style={{float:\"left\",marginLeft:\"5%\",fontSize:\"18px\",marginBottom:\"10px\",fontWeight:\"bold\"}}>Start Time</div>\r\n        <form class=\"ui form\">\r\n        <div style={{marginLeft:\"5%\",marginRight:\"5%\",width:\"90%\"}} className=\"ui three column grid\">\r\n        <div style={{display:\"inline-block\",textAlign:\"left\"}} class=\"field column\"><label>Hr</label>\r\n            \r\n            \r\n             <input onChange={(e)=>{sethr(e.target.value)}} type=\"text\" placeholder=\"Hr\"/></div>\r\n\r\n             <div style={{display:\"inline-block\",textAlign:\"left\"}} class=\"field column\"><label>Min</label>\r\n        \r\n             <input onChange={(e)=>{ setmin(e.target.value);}} type=\"text\" placeholder=\"Min\"/></div>\r\n             <div style={{display:\"inline-block\",textAlign:\"left\"}} class=\"field column\"><label>AM/PM</label>\r\n            \r\n             <Dropdown onChange={(e,data)=>{setap(data.value);}} placeholder='AM/PM' fluid selection options={options} />\r\n             </div>\r\n             </div>\r\n             </form>\r\n             <form class=\"ui form\">\r\n        \r\n        <div style={{float:\"left\",marginLeft:\"5%\",fontSize:\"18px\",marginBottom:\"10px\",fontWeight:\"bold\"}}>End Time</div>\r\n        <div style={{marginLeft:\"5%\",marginRight:\"5%\",width:\"90%\"}} className=\"ui three column grid\">\r\n        <div style={{display:\"inline-block\",textAlign:\"left\"}} class=\"field column\"><label>Hr</label>\r\n            \r\n            \r\n             <input onChange={(e)=>{ sethrs(e.target.value)}} type=\"text\" placeholder=\"Hr\"/></div>\r\n\r\n             <div style={{display:\"inline-block\",textAlign:\"left\"}} class=\"field column\"><label>Min</label>\r\n        \r\n             <input onChange={(e)=>{ setmins(e.target.value)}} type=\"text\" placeholder=\"Min\"/></div>\r\n             <div style={{display:\"inline-block\",textAlign:\"left\"}} class=\"field column\"><label>AM/PM</label>\r\n             <Dropdown onChange={(e,data)=>{setaps(data.value);}} placeholder='AM/PM' fluid selection options={options} />\r\n             </div>\r\n             </div>\r\n    \r\n             </form>\r\n             \r\n             </div>\r\n             \r\n    )\r\n}\r\n\r\nexport default Timepage\r\n","import React,{useState,useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Trainingpage from './components/trainingpage';\nimport Titlepage from './components/titlepage';\nimport Timepage from './components/timepage';\n\n\nfunction App() {\n    const [trainingpage, settrainingpage] = useState(true);\n    const [ titlepage, settitlepage] = useState(false);\n    const [timepage, settimepage] = useState(false);\n    const [title, settitle] = useState(\"\");\n    const [date, setdate] = useState(\"\");\n    const [startTime, setstartTime] = useState(\"\");\n    const [endTime, setendTime] = useState(\"\");\n    console.log(title);\n    console.log(date);\n    console.log(startTime);\n    console.log(endTime);\n    useEffect(() => {\n      inserttraining();\n    }, [startTime,endTime])\n    function inserttraining()\n    { if(startTime&&endTime){\n      fetch('https://natural-rattler-14.hasura.app/v1/graphql',{\n            method:'POST',\n            headers:{'Content-Type':'application/json'},\n            body:JSON.stringify({query:`mutation{\n              insert_training(objects: {date: \"${date}\", endTime: \"${endTime}\", startTime: \"${startTime}\", title: \"${title}\"})\n              {\n                returning{\n                  id\n                  title\n                  endTime\n                  startTime\n                  date\n                }\n                affected_rows\n              }\n            }`})\n    \n        }).then((res)=>{\n          setTimeout(() => {\n            window.location.reload(true)\n          }, 200);\n        })}\n    }\n  return (\n    <div className=\"App\">\n    {\n      trainingpage&&(<Trainingpage setTraining={()=>{settrainingpage(false);settitlepage(true)}}/>)\n      }\n    {\n      titlepage&&(<Titlepage setTitle={()=>{settitlepage(false);settimepage(true)}} settitle={(data)=>{settitle(data)}} setDate={(data)=>{setdate(data)}} />)\n    }\n     {\n       timepage&&(<Timepage setTime={()=>{settimepage(false);settrainingpage(true)}} startTime={(time)=>{setstartTime(time)}} endTime={(time)=>{setendTime(time)}} insertTraining={()=>{inserttraining()}} startt1={startTime} endt1={endTime} />)\n\n     }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}